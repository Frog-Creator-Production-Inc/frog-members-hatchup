openapi: 3.0.0
info:
  title: HatchUp
  version: 1.0.0
  description: HatchUpプロジェクトのAPIドキュメントです。
paths:
  /api/admin/check:
    get:
      summary: ユーザーが管理者かどうかをチェック
      tags:
        - Admin
      responses:
        '200':
          description: 正常応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  isAdmin:
                    type: boolean
                    description: ユーザーが管理者であれば true
                  source:
                    type: string
                    description: 管理者であることの確認元 ('database' または 'fallback')
                    enum:
                      - database
                      - fallback
                  user:
                    type: object
                    description: 認証されたユーザー情報
                    properties:
                      id:
                        type: string
                        description: ユーザーID
                      email:
                        type: string
                        description: ユーザーのメールアドレス
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/aiagent/messages:
    get:
      summary: セッションのメッセージ履歴を取得
      tags:
        - AI Agent
      parameters:
        - name: session_id
          in: query
          required: true
          schema:
            type: string
            description: 取得するメッセージセッションのID
      responses:
        '200':
          description: メッセージ履歴が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        created_at:
                          type: string
                          format: date-time
                        user_id:
                          type: string
                        session_id:
                          type: string
                        sender:
                          type: string
                        content:
                          type: string
                        metadata:
                          type: object
                          additionalProperties: true
        '400':
          description: クエリパラメータ 'session_id' が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: AIメッセージをデータベースに保存
      tags:
        - AI Agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - session_id
                - sender
                - content
              properties:
                session_id:
                  type: string
                  description: メッセージが属するセッションのID
                sender:
                  type: string
                  description: メッセージの送信者
                content:
                  type: string
                  description: メッセージの内容
                metadata:
                  type: object
                  description: その他のメタデータ
                  nullable: true
                  additionalProperties: true
      responses:
        '200':
          description: メッセージが正常に保存された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message_id:
                    type: string
                    description: 保存されたメッセージのID
        '400':
          description: リクエストボディの必須フィールドが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/aiagent/session:
    post:
      summary: 新しいチャットセッションを作成
      tags:
        - AI Agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  description: セッションを作成するユーザーのID
      responses:
        '200':
          description: セッションが正常に作成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                    description: 作成されたセッションのID
        '400':
          description: リクエストボディの必須フィールドが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: 特定のセッションの会話履歴を取得
      tags:
        - AI Agent
      parameters:
        - name: sessionId
          in: query
          required: true
          schema:
            type: string
            description: 取得するセッションのID
      responses:
        '200':
          description: 会話履歴が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  chatHistory:
                    type: array
                    items:
                      type: object
                      properties:
                        role:
                          type: string
                          description: メッセージの送信者（'user' または 'assistant'）
                          enum:
                            - user
                            - assistant
                        content:
                          type: string
                          description: メッセージの内容
        '400':
          description: クエリパラメータ 'sessionId' が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/aiagent/setup:
    get:
      summary: AIエージェント用データベースのセットアップ状態を確認
      tags:
        - AI Agent
      description: |
        SupabaseにAIエージェントに必要なテーブル（visa_types, visa_information, chat_sessions, messages）が
        存在するかどうかを確認します。テーブルが存在しない場合、手動でセットアップするためのSQLスクリプトを返します。
      responses:
        '200':
          description: |
            テーブルの存在確認が完了した際の応答。
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      message:
                        type: string
                        example: AIエージェント用のテーブルは既に存在します
                      tables:
                        type: array
                        description: 既存のテーブルのダミーデータ
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                  - type: object
                    properties:
                      success:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: テーブルが存在しません。Supabaseダッシュボードで以下のSQLを実行してください。
                      sql:
                        type: string
                        description: テーブルを作成するためのSQLスクリプト
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/aiagent/test-microcms:
    get:
      summary: MicroCMSからインタビュー記事を取得して分析
      tags:
        - AI Agent
      responses:
        '200':
          description: 検索結果と分析データが正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  query:
                    type: string
                    description: 実行された直接検索クエリ
                  keywords:
                    type: array
                    items:
                      type: string
                    description: 実行されたキーワード検索
                  interviewResults:
                    type: object
                    properties:
                      directSearch:
                        type: number
                        description: 直接検索で見つかった記事数
                      keywordSearch:
                        type: number
                        description: キーワード検索で見つかった記事数
                      uniqueResults:
                        type: number
                        description: 重複を排除した合計記事数
                  analysis:
                    type: object
                    properties:
                      total:
                        type: number
                        description: 分析対象となった記事の総数
                      canadaJobs:
                        type: number
                        description: カナダでの仕事に関連する記事数
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        slug:
                          type: string
                        isCanadaJob:
                          type: boolean
                        excerpt:
                          type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/aiagent:
    post:
      summary: 質問に基づいてAIエージェントが回答を生成
      tags:
        - AI Agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: AIエージェントへの質問
                sessionId:
                  type: string
                  description: 会話セッションのID
                  nullable: true
                userId:
                  type: string
                  description: ユーザーID
                  nullable: true
                chatHistory:
                  type: array
                  description: 過去の会話履歴
                  items:
                    type: object
                    properties:
                      role:
                        type: string
                        enum:
                          - user
                          - assistant
                      content:
                        type: string
      responses:
        '200':
          description: 回答が正常に生成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    description: AIエージェントが生成した回答
                  sessionId:
                    type: string
                    description: 新しく生成された、または既存のセッションID
                  sources:
                    type: object
                    properties:
                      visa:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            url:
                              type: string
                      courses:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            title:
                              type: string
                            school:
                              type: string
                            location:
                              type: string
                            tuition:
                              type: number
                      interviews:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            slug:
                              type: string
                            publishedAt:
                              type: string
                              format: date-time
                  analysis:
                    type: object
                    properties:
                      total:
                        type: number
                        description: 分析対象となったインタビュー記事の総数
                      canadaJobs:
                        type: number
                        description: カナダでの仕事に関連するインタビュー記事数
                  recommendations:
                    type: object
                    properties:
                      migrationGoal:
                        type: string
                      futureOccupation:
                        type: object
                        properties:
                          id:
                            type: string
                          title:
                            type: string
                            nullable: true
                          industry:
                            type: string
                            nullable: true
                      courses:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            title:
                              type: string
                            school:
                              type: string
                            location:
                              type: string
                            tuition:
                              type: number
                    nullable: true
        '400':
          description: リクエストボディに質問が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/auth/content-snare-callback:
    get:
      summary: Content Snare OAuth コールバック
      description: |
        Content SnareのOAuth認証フローにおけるリダイレクトURIとして機能します。
        URLクエリパラメータから認証コード（`code`）を取得し、Supabaseを使ってアクセストークンとリフレッシュトークンを交換します。
        取得したリフレッシュトークンはデータベースに保存され、ユーザーは設定ページにリダイレクトされます。
      tags:
        - Auth
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
          description: Content Snareから付与された認証コード
        - name: state
          in: query
          required: false
          schema:
            type: string
          description: OAuthフローでセキュリティのために使用される任意の状態パラメータ
      responses:
        '302':
          description: |
            処理が完了し、ユーザーを別のページにリダイレクトします。
            リダイレクト先URLのクエリパラメータで成功またはエラーの状態が通知されます。
          headers:
            Location:
              schema:
                type: string
              description: リダイレクト先のURL（例：/settings?success=content_snare_connected または /settings?error=general）
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/cancel-subscription:
    post:
      summary: ユーザーのStripe定期購読をキャンセル
      description: |
        指定されたユーザーIDのStripe定期購読をキャンセルし、Supabaseのプロフィール情報を更新します。
      tags:
        - Cancel-subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  description: 購読をキャンセルするユーザーのID
                  format: uuid
      responses:
        '200':
          description: 購読が正常にキャンセルされた場合の応答
          content:
            text/plain:
              schema:
                type: string
                example: Subscription cancelled
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/admin/fetch-full-status:
    get:
      summary: Content Snareの統合情報を取得
      description: |
        指定された`request_id`に基づいて、Content SnareのAPIからリクエストの詳細、進捗状況、およびページ情報を取得します。
        このエンドポイントは管理者権限が必要です。
      tags:
        - Content-snare
      parameters:
        - name: request_id
          in: query
          required: true
          schema:
            type: string
          description: Content SnareのRequest ID、または`course_applications`テーブルのID
        - name: verbose
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: |
            `true`に設定すると、Content Snareからの応答内容をより詳細に含めます。
      responses:
        '200':
          description: 情報が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Content SnareのRequest ID
                  name:
                    type: string
                    description: リクエストの名前
                  status:
                    type: string
                    description: リクエストのステータス
                  url:
                    type: string
                    description: Content Snare上のリクエストURL
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  progress:
                    type: object
                    description: 進捗状況に関する情報
                    properties:
                      total_fields:
                        type: number
                      done_fields:
                        type: number
                      percent:
                        type: number
                      completed_sections:
                        type: number
                      total_sections:
                        type: number
                  sections:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        status:
                          type: string
                  pages:
                    type: array
                    description: リクエスト内のページ情報（`verbose`が`true`の場合は詳細、それ以外は簡略化）
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        status:
                          type: string
                        fields_count:
                          type: number
                        done_fields_count:
                          type: number
                  client:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                      email:
                        type: string
                  has_unread_comments:
                    type: boolean
                  responses:
                    type: array
                    description: |
                      `verbose`が`true`の場合にのみ含まれる、提出された応答の詳細。
                    items:
                      type: object
        '400':
          description: クエリパラメータ `request_id` が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: 管理者権限がない、またはContent Snareの認証情報がない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Content SnareのRequest IDが見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/admin/get-request-pages:
    get:
      summary: Content Snareリクエストのページ情報を取得 (レガシー)
      description: |
        指定された`request_id`に対応するContent Snareリクエストのページ情報のリストを取得します。
        このエンドポイントは、内部的に`fetch-full-status`エンドポイントを呼び出して結果を整形します。
      tags:
        - Content-snare
      parameters:
        - name: request_id
          in: query
          required: true
          schema:
            type: string
          description: Content SnareのRequest ID、または`course_applications`テーブルのID
      responses:
        '200':
          description: ページ情報が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: Content SnareのRequest ID
                  pages:
                    type: array
                    items:
                      type: object
                      description: 簡略化されたページ情報
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        status:
                          type: string
                        fields_count:
                          type: number
                        done_fields_count:
                          type: number
        '400':
          description: クエリパラメータ `request_id` が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: request_idは必須です
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: 認証情報が無効であるか、管理者権限がない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Content Snareの認証が必要です
        '404':
          description: 参照している内部APIでContent Snare Request IDが見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Content Snareページ情報の取得に失敗しました
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/admin/get-request-status:
    get:
      summary: Content Snareの統合情報を取得 (レガシー)
      description: |
        指定された`request_id`に基づいて、Content Snareの全情報を取得し、旧形式のAPIレスポンスに変換して返します。
        このエンドポイントは、内部的に`fetch-full-status`エンドポイントを呼び出して結果を整形します。
        管理者権限が必要です。
      tags:
        - Content-snare
      parameters:
        - name: request_id
          in: query
          required: true
          schema:
            type: string
          description: Content SnareのRequest ID、または`course_applications`テーブルのID
        - name: verbose
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: |
            `true`に設定すると、Content Snareからの応答内容をより詳細に含めます。
      responses:
        '200':
          description: 情報が正常に取得され、レガシー形式に変換された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Content SnareのRequest ID
                  name:
                    type: string
                    description: リクエストの名前
                  status:
                    type: string
                    description: リクエストのステータス
                  url:
                    type: string
                    description: Content Snare上のリクエストURL
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  progress:
                    type: object
                    description: 新しい形式の進捗情報オブジェクト
                  fields_count:
                    type: number
                    description: レガシー形式の総フィールド数
                  done_fields_count:
                    type: number
                    description: レガシー形式の完了済みフィールド数
                  completion_percentage:
                    type: number
                    description: レガシー形式の完了率
                  sections:
                    type: array
                    items:
                      type: object
                  pages:
                    type: array
                    items:
                      type: object
                  client:
                    type: object
                  has_unread_comments:
                    type: boolean
                  responses:
                    type: array
                    description: '`verbose`が`true`の場合にのみ含まれる'
                    items:
                      type: object
        '400':
          description: クエリパラメータ `request_id` が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: request_idは必須です
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: 認証情報が無効であるか、管理者権限がない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Content Snareの認証が必要です
        '404':
          description: 参照している内部APIでContent Snare Request IDが見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Content Snare情報の取得に失敗しました
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/admin/get-templates:
    get:
      summary: Content Snareのテンプレート一覧を取得
      description: |
        認証済みの管理者ユーザーとして、Content Snareに保存されているリクエストテンプレートの一覧を取得します。
        このAPIは、リフレッシュトークンを使用してアクセストークンを自動的に取得・更新します。
      tags:
        - Content-snare
      responses:
        '200':
          description: テンプレート一覧が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: テンプレートのID
                    name:
                      type: string
                      description: テンプレート名
                    slug:
                      type: string
                      description: テンプレートのスラッグ
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: 管理者権限がない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 管理者権限が必要です
        '404':
          description: Content Snareトークンが見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Content Snareトークンが見つかりません
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/admin/list-requests:
    get:
      summary: Content Snareのリクエスト一覧を取得
      description: |
        認証済みの管理者ユーザーとして、Content Snareの全リクエストの一覧を取得します。
        リクエスト一覧は、アプリケーション内の`course_applications`テーブルと関連付けられ、簡略化された形式で返されます。
      tags:
        - Content-snare
      responses:
        '200':
          description: リクエスト一覧が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Content SnareのRequest ID
                    application_id:
                      type: string
                      nullable: true
                      description: 関連付けられたコース申請のID（存在しない場合は`null`）
                    name:
                      type: string
                      description: リクエストの名前
                    status:
                      type: string
                      description: リクエストのステータス
                    share_link:
                      type: string
                      description: リクエストへの共有リンク
                    due:
                      type: string
                      format: date-time
                      nullable: true
                      description: リクエストの期日
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    last_activity_at:
                      type: string
                      format: date-time
                      nullable: true
                      description: 最終活動日時
                    folder_name:
                      type: string
                      nullable: true
                      description: リクエストが属するフォルダの名前
                    client_name:
                      type: string
                      nullable: true
                      description: クライアントのフルネーム
                    client_email:
                      type: string
                      nullable: true
                      description: クライアントのEメールアドレス
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: 管理者権限がない、またはContent Snareの認証情報がない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 管理者権限が必要です
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/auth-code:
    get:
      summary: Content SnareのOAuth認証URLを生成
      description: |
        OAuth 2.0の認可コードフローを開始するため、Content Snareの認証ページへのURLを生成します。
        ランダムな`state`値を生成してSupabaseに保存し、CSRF攻撃を防ぎます。
        このエンドポイントは認証済みユーザーのみが利用可能です。
      tags:
        - Content-snare
      responses:
        '200':
          description: 認証URLが正常に生成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  authUrl:
                    type: string
                    format: uri
                    description: Content SnareのOAuth認証ページへの完全なURL
                  state:
                    type: string
                    description: CSRF対策のために生成されたランダムな状態値
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/auth-status:
    get:
      summary: Content Snareとの認証ステータスを確認
      description: |
        Supabaseの`refresh_tokens`テーブルからContent Snareの認証情報をチェックし、トークンの有効性を検証します。
        リフレッシュトークンが有効であれば、新しいトークンに更新します。
        このエンドポイントは、クライアント側で連携ステータスを表示するために使用されます。
      tags:
        - Content-snare
      responses:
        '200':
          description: 認証ステータスの確認が正常に完了した場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
                    description: Content Snareとの連携が認証済みか
                  hasToken:
                    type: boolean
                    description: データベースにリフレッシュトークンが存在するか
                  tokenRefreshed:
                    type: boolean
                    description: リフレッシュトークンが正常に更新されたか
                  message:
                    type: string
                    description: ステータスに関する詳細メッセージ
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/check-status:
    post:
      summary: Content Snareのサブミッションステータスを取得
      description: |
        指定された`submissionId`に基づいて、Content Snareのサブミッションの詳細情報を取得します。
        このAPIは、複数の方法（環境変数、メモリ、Supabase）でアクセストークンを取得・更新し、Content SnareのAPIを呼び出します。
      tags:
        - Content-snare
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - submissionId
              properties:
                submissionId:
                  type: string
                  description: 取得するサブミッションのID
      responses:
        '200':
          description: サブミッション情報が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                description: Content Snare APIから返されるサブミッションオブジェクト
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  status:
                    type: string
                  completed_at:
                    type: string
                    format: date-time
                    nullable: true
                  client:
                    type: object
                    properties:
                      id:
                        type: number
                      full_name:
                        type: string
                      email:
                        type: string
        '400':
          description: リクエストボディに `submissionId` が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: submissionId が必要です
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Content Snareの認証情報がないか、トークンが無効な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 存在しないサブミッションIDを指定した場合など、Content Snare APIからのエラー応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/client-search:
    get:
      summary: Content SnareのクライアントをEメールアドレスで検索
      description: |
        指定されたEメールアドレスに一致するContent Snareのクライアント情報を検索します。
        このAPIは、複数の方法（環境変数、メモリ、Supabase）でアクセストークンを取得・更新し、Content SnareのAPIを呼び出します。
        認証済みのユーザーのみが利用可能です。
      tags:
        - Content-snare
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
          description: 検索するクライアントのEメールアドレス
      responses:
        '200':
          description: 検索が正常に完了した場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  clients:
                    type: array
                    description: 検索結果として返されたクライアントのリスト
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        full_name:
                          type: string
                        email:
                          type: string
                        company:
                          type: string
                          nullable: true
                  success:
                    type: boolean
                    description: API呼び出しが成功したか
        '400':
          description: クエリパラメータ `email` が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: emailクエリパラメータは必須です
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Content Snareの認証情報がないか、トークンが無効な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/create-client:
    post:
      summary: Content Snareに新しいクライアントを作成
      description: |
        指定された名前とメールアドレスでContent Snareに新しいクライアントを作成します。
        作成前に既存のクライアントを検索し、存在する場合は新規作成せずにその情報を返します。
        このAPIは、複数の方法（メモリ、Supabase）でアクセストークンを取得・更新し、Content SnareのAPIを呼び出します。
        認証済みのユーザーのみが利用可能です。
      tags:
        - Content-snare
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - email
              properties:
                firstName:
                  type: string
                  description: クライアントの姓
                lastName:
                  type: string
                  description: クライアントの名
                email:
                  type: string
                  format: email
                  description: クライアントのEメールアドレス
      responses:
        '200':
          description: クライアントが正常に作成された、または既存のクライアント情報が返された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_id:
                    type: string
                    description: Content Snareで作成された、または既存のクライアントのID
                  success:
                    type: boolean
                    description: API呼び出しが成功したか
                  already_exists:
                    type: boolean
                    description: クライアントが既に存在していた場合に `true`
                  client_info:
                    type: object
                    description: 既存クライアントの詳細情報
                    properties:
                      id:
                        type: string
                      full_name:
                        type: string
                      email:
                        type: string
        '400':
          description: リクエストボディに必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'firstName, lastName, emailは必須です'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Content Snareの認証情報がない、またはトークンが無効な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: クライアントは存在するが、詳細を取得できなかったなど、処理できないエンティティ
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: クライアントは既に存在しますが、詳細を取得できませんでした。
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/create-request:
    post:
      summary: Content Snareに新しいリクエストを作成
      description: |
        指定された`courseId`と`clientId`に基づいて、Content Snareに新しいリクエストを作成します。
        リクエスト作成前に、認証済みユーザーのプロファイル情報でContent Snareのクライアント情報を更新し、コースに紐づくテンプレートIDを使用します。
        このAPIは、複数の方法（メモリ、Supabase）でアクセストークンを取得・更新し、Content SnareのAPIを呼び出します。
      tags:
        - Content-snare
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - courseId
                - clientId
              properties:
                courseId:
                  type: string
                  description: リクエストの元となるコースのID
                clientId:
                  type: string
                  description: リクエストの宛先となるContent SnareクライアントのID
      responses:
        '200':
          description: リクエストとコース申請が正常に作成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: Content Snareで作成されたリクエストのID
                  share_link:
                    type: string
                    format: uri
                    description: リクエストへの共有リンク
                  application_id:
                    type: string
                    description: Supabaseで作成されたコース申請のID
                  success:
                    type: boolean
        '400':
          description: 必須パラメータの不足、またはコースにテンプレートが設定されていない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Content Snareの認証情報がないか、トークンが無効な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 指定されたコースまたはユーザーが見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/create-submission:
    post:
      summary: Content Snareに新しいサブミッションを作成
      description: |
        指定されたクライアントIDとパッケージIDを使用して、Content Snareに新しいサブミッションを作成します。
        このAPIは、複数の方法（環境変数、メモリ、Supabase）でアクセストークンを取得・更新し、Content SnareのAPIを呼び出します。
        認証済みユーザーのみが利用可能です。
      tags:
        - Content-snare
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - clientId
                - packageId
              properties:
                clientId:
                  type: string
                  description: サブミッションを割り当てるクライアントのID
                packageId:
                  type: string
                  description: サブミッションの元となるパッケージのID
      responses:
        '200':
          description: サブミッションが正常に作成された場合の応答
          content:
            application/json:
              schema:
                type: object
                description: Content Snare APIから返されるサブミッションオブジェクト
                properties:
                  id:
                    type: string
                    description: 作成されたサブミッションのID
                  status:
                    type: string
                    description: サブミッションのステータス
                  package_id:
                    type: string
                    description: 使用されたパッケージのID
                  client_id:
                    type: string
                    description: 割り当てられたクライアントのID
        '400':
          description: リクエストボディに必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: clientId と packageId が必須です
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Content Snareの認証情報がない、またはトークンが無効な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/exchange-token:
    post:
      summary: Content Snareのアクセストークンをリフレッシュ
      description: |
        Supabaseに保存されているリフレッシュトークンを使用して、Content Snareの新しいアクセストークンを取得します。
        新しいリフレッシュトークンもデータベースに保存されます。
        このAPIは、アクセストークンの有効期限が切れた際に呼び出されることを想定しています。
      tags:
        - Content-snare
      responses:
        '200':
          description: トークンが正常にリフレッシュされた場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: 新しく生成されたアクセストークン
                  token_type:
                    type: string
                    example: Bearer
                    description: トークンのタイプ
                  expires_in:
                    type: number
                    description: トークンの有効期限（秒単位）
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Content Snareの認証情報がない、またはトークンが無効な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/get-applications:
    get:
      summary: 認証済みユーザーのコース申請一覧を取得
      description: |
        認証済みのユーザーが申請した全てのコース申請情報と、それに紐づくコースの詳細情報を取得します。
        結果は申請が作成された新しい順にソートされます。
      tags:
        - Content-snare
      responses:
        '200':
          description: コース申請一覧が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  applications:
                    type: array
                    description: ユーザーのコース申請情報のリスト
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        user_id:
                          type: string
                        course_id:
                          type: string
                        status:
                          type: string
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                        request_url:
                          type: string
                          format: uri
                          nullable: true
                        content_snare_id:
                          type: string
                          nullable: true
                        content_snare_request_id:
                          type: string
                          nullable: true
                        course:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            school_id:
                              type: string
                            category:
                              type: string
                            description:
                              type: string
                            content_snare_template_id:
                              type: string
                              nullable: true
                  success:
                    type: boolean
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/get-request-status:
    get:
      summary: Content Snareリクエストの詳細情報を取得
      description: |
        ユーザーが所有するContent Snareリクエストの詳細情報（進捗状況、ページ、セクションなど）を取得します。
        リクエストIDは、アプリケーションIDまたはContent Snare自体のリクエストIDのいずれかで指定可能です。
        このAPIは、トークンが期限切れの場合に自動的に再発行して再試行するロジックを含みます。
      tags:
        - Content-snare
      parameters:
        - name: request_id
          in: query
          required: true
          schema:
            type: string
          description: 取得するリクエストのID（コース申請IDまたはContent SnareリクエストID）
        - name: verbose
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: |
            `true`の場合、ページの詳細情報やレスポンスデータなど、より詳細な情報を含めて返します。
            デフォルトは `false` です。
      responses:
        '200':
          description: リクエストの詳細が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Content SnareリクエストのID
                  name:
                    type: string
                    description: リクエスト名
                  status:
                    type: string
                    description: リクエストのステータス
                  url:
                    type: string
                    format: uri
                    description: Content Snareプラットフォーム上のリクエストURL
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  progress:
                    type: object
                    description: リクエストの進捗状況
                    properties:
                      total_fields:
                        type: number
                        description: 全フィールド数
                      done_fields:
                        type: number
                        description: 完了したフィールド数
                      percent:
                        type: number
                        description: 進捗率（パーセンテージ）
                      completed_sections:
                        type: number
                        description: 完了したセクション数
                      total_sections:
                        type: number
                        description: 全セクション数
                  sections:
                    type: array
                    description: リクエスト内のセクションリスト
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        status:
                          type: string
                  pages:
                    type: array
                    description: リクエスト内のページリスト（`verbose`が`false`の場合は簡略化）
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        status:
                          type: string
                  client:
                    type: object
                    description: 関連するクライアント情報
                    properties:
                      id:
                        type: string
                      full_name:
                        type: string
                      email:
                        type: string
                  has_unread_comments:
                    type: boolean
                  share_link:
                    type: string
                    format: uri
                  due:
                    type: string
                    format: date-time
                    nullable: true
                  folder_name:
                    type: string
                  last_activity_at:
                    type: string
                    format: date-time
                    nullable: true
                  responses:
                    type: array
                    description: |
                      `verbose=true`の場合にのみ含まれる、ユーザーの回答データ
                    items:
                      type: object
                    nullable: true
        '400':
          description: クエリパラメータ `request_id` が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: ユーザーが指定されたリクエストへのアクセス権限を持っていない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 指定されたIDに対応するContent Snareリクエストが見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/oauth-direct:
    get:
      summary: Content SnareのOAuth認証URLを生成
      description: |
        Content Snareとの連携に必要なOAuth認証プロセスを開始するためのURLを生成します。
        このURLは、指定された`client_id`、`redirect_uri`、および必要なスコープを含んでいます。
        認証済みのユーザーのみが利用可能です。
      tags:
        - Content-snare
      responses:
        '200':
          description: 認証URLが正常に生成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
                    description: Content SnareのOAuth認証ページへの完全なURL
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/refresh-token:
    get:
      summary: ユーザーのContent Snareアクセストークンをリフレッシュ
      description: |
        認証済みユーザーのContent Snareリフレッシュトークンを使用して、新しいアクセストークンを取得します。
        新しいリフレッシュトークンはデータベースに更新され、アクセストークンはレスポンスとして返されます。
        リフレッシュトークンが無効な場合は、データベースから削除し、再認証を促します。
      tags:
        - Content-snare
      responses:
        '200':
          description: トークンが正常にリフレッシュされた場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  expiresAt:
                    type: string
                    format: date-time
                    description: 新しいアクセストークンの有効期限
                  access_token:
                    type: string
                    description: 新しく生成されたアクセストークン
        '401':
          description: 認証セッションがない、またはリフレッシュトークンが無効な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 認証が必要です
                  requireReauth:
                    type: boolean
                    description: リフレッシュトークンが無効で再認証が必要な場合に `true`
        '404':
          description: ユーザーのリフレッシュトークンが見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: リフレッシュトークンが見つかりません
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/content-snare/webhook:
    post:
      summary: Content SnareからのWebhook通知を処理
      description: |
        Content Snareから送信されるWebhookイベント（例：リクエストの提出、承認、却下）を受信して処理します。
        リクエストIDを基にSupabaseの`course_applications`テーブルを更新し、提出イベントの場合はSlackに通知を送信します。
        このエンドポイントは認証を必要としません。
      tags:
        - Content-snare
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - event
                - request_id
              properties:
                event:
                  type: string
                  description: 発生したイベントのタイプ（例：`request.submitted`）
                request_id:
                  type: string
                  description: イベントに関連するContent SnareリクエストのID
      responses:
        '200':
          description: Webhookイベントが正常に処理された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 無効なWebhookデータ（`event`または`request_id`が不足）の場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 関連するコース申請がデータベースに見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/course-application/create:
    post:
      summary: コース申請、Content Snareリクエスト、およびユーザーのスケジュールを作成
      description: |
        指定された`courseId`、`clientId`、および`intake_date_id`に基づいて、ユーザーのコース申請を作成します。
        この処理には、Supabaseでの以下の操作が含まれます。
        1. 認証済みユーザーのプロファイル情報でContent Snareクライアント情報を更新。
        2. コースに紐づくテンプレートIDを使用してContent Snareに新しいリクエストを作成。
        3. `course_applications`テーブルに申請データを保存。
        4. 選択された入学日情報に基づいて`user_schedules`テーブルに予定を作成。
        5. 内部APIを介してSlackに通知を送信。
        アクセストークンは、メモリ、Supabase、またはリフレッシュによって自動的に取得・更新されます。
      tags:
        - Course-application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - courseId
                - clientId
                - intake_date_id
              properties:
                courseId:
                  type: string
                  description: 申請するコースのID
                clientId:
                  type: string
                  description: 関連するContent SnareクライアントのID
                intake_date_id:
                  type: string
                  description: 選択された入学日（`course_intake_dates`テーブルのID）
      responses:
        '200':
          description: 申請、リクエスト、スケジュールが正常に作成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: Content Snareで作成されたリクエストのID
                  share_link:
                    type: string
                    format: uri
                    description: リクエストへの共有リンク
                  application_id:
                    type: string
                    description: Supabaseで作成されたコース申請のID
                  success:
                    type: boolean
        '400':
          description: 必須パラメータの不足、コースにテンプレートが設定されていない、または入学日が無効な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'courseId, clientId, intake_date_idは必須です'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Content Snareの認証情報がない、またはトークンが無効な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 指定されたコース、ユーザー、または入学日が見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/course-application/details:
    get:
      summary: ユーザーのコース申請詳細を取得
      description: |
        認証済みのユーザーが所有する特定のコース申請の詳細情報を取得します。
        申請情報には、関連するコース情報と入学日情報が含まれます。
        ユーザー自身の申請データにのみアクセス可能です。
      tags:
        - Course-application
      parameters:
        - name: applicationId
          in: query
          required: true
          schema:
            type: string
          description: 取得するコース申請のID
      responses:
        '200':
          description: コース申請の詳細情報が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      application:
                        type: object
                        properties:
                          id:
                            type: string
                          user_id:
                            type: string
                          course_id:
                            type: string
                          status:
                            type: string
                          created_at:
                            type: string
                            format: date-time
                          intake_date_id:
                            type: string
                            nullable: true
                          intake_date:
                            type: object
                            description: 関連する入学日情報
                            properties:
                              id:
                                type: string
                              course_id:
                                type: string
                              start_date:
                                type: string
                                format: date-time
                              application_deadline:
                                type: string
                                format: date-time
                                nullable: true
                              month:
                                type: number
                              day:
                                type: number
                              year:
                                type: number
                              is_tentative:
                                type: boolean
                              notes:
                                type: string
                                nullable: true
                      course:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          description:
                            type: string
        '400':
          description: クエリパラメータ `applicationId` が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: ユーザーが指定された申請へのアクセス権限を持っていない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 指定された`applicationId`に対応するコース申請またはコース情報が見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/course-application/schedules:
    get:
      summary: 特定のコース申請に関連するスケジュール一覧を取得
      description: |
        特定のコース申請IDに紐づく全てのユーザースケジュールを取得します。
        ユーザーは自身の申請に関連するスケジュールのみアクセス可能です。
        スケジュールは年、月、日、ソート順で昇順に並べ替えられて返されます。
      tags:
        - Course-application
      parameters:
        - name: applicationId
          in: query
          required: true
          schema:
            type: string
          description: スケジュールを取得するコース申請のID
      responses:
        '200':
          description: スケジュール一覧が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        user_id:
                          type: string
                        course_application_id:
                          type: string
                        title:
                          type: string
                        description:
                          type: string
                          nullable: true
                        year:
                          type: number
                        month:
                          type: number
                        day:
                          type: number
                          nullable: true
                        is_admin_locked:
                          type: boolean
                        is_completed:
                          type: boolean
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
        '400':
          description: クエリパラメータ `applicationId` が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: ユーザーが指定された申請へのアクセス権限を持っていない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 指定された`applicationId`に対応するコース申請が見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: ユーザーのスケジュールを更新
      description: |
        特定のスケジュールIDに対応するユーザースケジュールを更新します。
        リクエストボディの`action`パラメータによって、完了状態の切り替え、または日付の更新が可能です。
        - **`toggle_completed`**: `completed`パラメータに基づいて`is_completed`を更新します。
        - **`update_date`**: `year`, `month`, `day`パラメータに基づいて日付を更新します。
        この操作には、スケジュールが紐づくコース申請へのアクセス権（自身の申請または管理者権限）が必要です。`is_admin_locked`が`true`の場合、管理者のみが編集できます。
      tags:
        - Course-application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - applicationId
                - scheduleId
              properties:
                applicationId:
                  type: string
                  description: 更新するスケジュールが紐づくコース申請のID
                scheduleId:
                  type: string
                  description: 更新するスケジュールのID
                action:
                  type: string
                  enum:
                    - toggle_completed
                    - update_date
                  default: toggle_completed
                  description: 実行するアクション。
                completed:
                  type: boolean
                  description: '`action`が`toggle_completed`の場合に必須。スケジュールの新しい完了状態。'
                year:
                  type: number
                  description: '`action`が`update_date`の場合に必須。新しい年。'
                month:
                  type: number
                  description: '`action`が`update_date`の場合に必須。新しい月。'
                day:
                  type: number
                  description: '`action`が`update_date`の場合に必須。新しい日。'
      responses:
        '200':
          description: スケジュールが正常に更新された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: 更新されたスケジュールオブジェクト
        '400':
          description: 必須パラメータの不足、または無効なリクエストボディの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: 権限不足によりスケジュールを更新できない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 指定された申請またはスケジュールが見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/course-application/status:
    get:
      summary: 特定のコースに対するユーザーの申請ステータスを取得
      description: |
        認証済みのユーザー（またはクエリパラメータで指定されたユーザー）が、特定のコースに対して行ったコース申請のステータスを取得します。
        申請が存在しない場合は`null`を返します。
      tags:
        - Course-application
      parameters:
        - name: courseId
          in: query
          required: true
          schema:
            type: string
          description: ステータスを取得するコースのID
        - name: userId
          in: query
          required: false
          schema:
            type: string
          description: 情報を取得するユーザーのID。指定がない場合は認証済みユーザーIDを使用。
      responses:
        '200':
          description: 申請ステータスが正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    nullable: true
                    properties:
                      id:
                        type: string
                        description: コース申請のID
                      status:
                        type: string
                        description: 申請の現在のステータス
                      content_snare_request_id:
                        type: string
                        description: 関連するContent SnareリクエストのID
        '400':
          description: 必須クエリパラメータ`courseId`が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/create-customer-portal-session:
    post:
      summary: Stripeカスタマーポータルセッションを作成
      description: |
        Stripeの顧客ID (`customerId`) を使用して、顧客が請求情報やサブスクリプションを管理するためのカスタマーポータルセッションを作成します。
        このAPIは、顧客をStripeのホスト型ポータルページにリダイレクトするために使用されます。
      tags:
        - Create-customer-portal-session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerId
              properties:
                customerId:
                  type: string
                  description: Stripeの顧客ID
                  example: cus_1234567890abcdef
      responses:
        '200':
          description: セッションが正常に作成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
                    description: 顧客をリダイレクトするためのStripeカスタマーポータルのURL
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/create-subscription:
    post:
      summary: StripeサブスクリプションのCheckoutセッションを作成
      description: |
        指定されたユーザーID (`userId`) に対して、新しいStripeサブスクリプションのためのCheckoutセッションを作成します。
        このAPIは、ユーザーがすでにアクティブなサブスクリプションを持っていないことを確認し、指定された価格IDでサブスクリプションをセットアップします。
        ユーザーはStripeのCheckoutページにリダイレクトされ、支払いを完了できます。
      tags:
        - Create-subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  description: サブスクリプションを作成するユーザーのSupabaseユーザーID
                  example: abcde-12345-fghij-67890
      responses:
        '200':
          description: Checkoutセッションが正常に作成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                    description: 作成されたStripe CheckoutセッションのID
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/events:
    get:
      summary: Google Calendarのイベントを取得
      description: |
        指定された年と月にGoogle Calendarからイベントを取得します。
        このAPIは、Supabaseに保存されているGoogleのリフレッシュトークンを使用して、認証とAPI呼び出しを行います。
        トークンが存在しない場合はイベントを取得できません。
        クエリパラメータで年と月を指定しない場合、現在の日付が使用されます。
      tags:
        - Events
      parameters:
        - name: month
          in: query
          required: false
          schema:
            type: string
          description: イベントを取得する月（1-12）
        - name: year
          in: query
          required: false
          schema:
            type: string
          description: イベントを取得する年
      responses:
        '200':
          description: イベントが正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    description: Google Calendarから取得したイベントのリスト
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        summary:
                          type: string
                          description: イベントのタイトル
                        start:
                          type: object
                          properties:
                            dateTime:
                              type: string
                              format: date-time
                              nullable: true
                            date:
                              type: string
                              format: date
                              nullable: true
                        end:
                          type: object
                          properties:
                            dateTime:
                              type: string
                              format: date-time
                              nullable: true
                            date:
                              type: string
                              format: date
                              nullable: true
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/job-positions:
    get:
      summary: 全ての職種データを取得
      description: |
        データベースの`job_positions`テーブルから、全ての職種データ（役職、説明など）を一覧で取得します。
        結果は役職名（`title`）でソートされて返されます。
      tags:
        - Job-positions
      responses:
        '200':
          description: 職種データの一覧が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 職種ID
                    title:
                      type: string
                      description: 役職名
                    description:
                      type: string
                      description: 職種の説明
                    created_at:
                      type: string
                      format: date-time
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/microcms:
    get:
      summary: MicroCMSのコンテンツを統合的に取得
      description: |
        MicroCMSからブログ記事、インタビュー、コース情報などの様々なコンテンツを取得する統合APIです。
        `type`クエリパラメータによって取得するコンテンツを切り替え、`limit`、`offset`、`category`などのパラメータで取得内容を制御できます。
        デフォルトでは、複数のコンテンツタイプ（ブログ、インタビュー、注目コース）を一度に取得します。
        すべてのリクエストには、キャッシュ制御のためのヘッダーが付与されます。
      tags:
        - MicroCMS
      parameters:
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - blog
              - interview
              - course
              - all
            default: all
          description: 取得するコンテンツのタイプ。
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: 取得するコンテンツの数。
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: 取得を開始するオフセット。
        - name: category
          in: query
          required: false
          schema:
            type: string
          description: 取得するブログ記事のカテゴリー。
        - name: slug
          in: query
          required: false
          schema:
            type: string
          description: 特定のブログ記事を取得するためのスラッグ。`type=blog`の場合に有効。
        - name: id
          in: query
          required: false
          schema:
            type: string
          description: 特定のコース情報を取得するためのID。`type=course`の場合に有効。
        - name: ttl
          in: query
          required: false
          schema:
            type: integer
            default: 3600
          description: キャッシュの有効期限（秒）。
        - name: revalidate
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: キャッシュを強制的に再検証するかどうか。
      responses:
        '200':
          description: コンテンツが正常に取得された場合の応答
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items: {}
                  - type: object
                    properties: {}
                  - type: object
                    properties:
                      blog:
                        type: object
                        properties:
                          contents:
                            type: array
                            items: {}
                          totalCount:
                            type: integer
                      interviews:
                        type: object
                        properties:
                          contents:
                            type: array
                            items: {}
                          totalCount:
                            type: integer
                      courses:
                        type: object
                        properties:
                          contents:
                            type: array
                            items: {}
                          totalCount:
                            type: integer
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/schools/[id]/courses/[courseId]/intake-dates':
    get:
      summary: 特定のコースの開始日一覧を取得
      description: |
        学校ID (`id`) とコースID (`courseId`) に基づいて、コースの開始日一覧を取得します。
        アクセスには、有効期限内で未使用のアクセス**トークン**と**メールアドレス**が必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 学校のID
        - name: courseId
          in: path
          required: true
          schema:
            type: string
          description: 開始日を取得するコースのID
        - name: token
          in: query
          required: true
          schema:
            type: string
          description: APIアクセス用の有効なトークン
        - name: email
          in: query
          required: true
          schema:
            type: string
          description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: 開始日一覧が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  intakeDates:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        course_id:
                          type: string
                        month:
                          type: number
                        day:
                          type: number
                          nullable: true
                        year:
                          type: number
                          nullable: true
                        is_tentative:
                          type: boolean
                        notes:
                          type: string
                          nullable: true
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 指定されたコースが見つからない、または学校に属していない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: 特定のコースに新しい開始日を登録
      description: |
        指定されたコースIDに新しい開始日情報を登録します。
        アクセスには、有効期限内で未使用のアクセス**トークン**と**メールアドレス**が必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 学校のID
        - name: courseId
          in: path
          required: true
          schema:
            type: string
          description: 開始日を登録するコースのID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - month
                - token
                - email
              properties:
                month:
                  type: number
                  description: 新しい開始日の月
                day:
                  type: number
                  nullable: true
                  description: 新しい開始日の日
                year:
                  type: number
                  nullable: true
                  description: 新しい開始日の年
                is_tentative:
                  type: boolean
                  default: true
                  description: 暫定的な日付かどうか
                notes:
                  type: string
                  nullable: true
                  description: 開始日に関するメモ
                token:
                  type: string
                  description: APIアクセス用の有効なトークン
                email:
                  type: string
                  format: email
                  description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: 開始日が正常に登録された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  intakeDate:
                    type: object
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 指定されたコースが見つからない、または学校に属していない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: 特定のコースから開始日を削除
      description: |
        指定された開始日ID (`intakeDateId`) に基づいて、コースの開始日を削除します。
        アクセスには、有効期限内で未使用のアクセス**トークン**と**メールアドレス**が必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 学校のID
        - name: courseId
          in: path
          required: true
          schema:
            type: string
          description: 開始日を削除するコースのID
        - name: intakeDateId
          in: query
          required: true
          schema:
            type: string
          description: 削除する開始日のID
        - name: token
          in: query
          required: true
          schema:
            type: string
          description: APIアクセス用の有効なトークン
        - name: email
          in: query
          required: true
          schema:
            type: string
          description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: 開始日が正常に削除された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 開始日が見つからない、またはコースに属していない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/schools/[id]/courses/[courseId]/job-positions':
    get:
      summary: 特定のコースに関連付けられた職種を取得
      description: |
        特定の学校とコースIDに紐づく、関連職種の一覧を取得します。
        このエンドポイントは、`Authorization`ヘッダーで渡される有効なトークンと`X-Email`ヘッダーで渡されるメールアドレスを使用して認証を行います。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 学校のID
        - name: courseId
          in: path
          required: true
          schema:
            type: string
          description: 職種データを取得するコースのID
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            pattern: '^Bearer [a-zA-Z0-9_-]+$'
          description: APIアクセス用の有効なBearerトークン
        - name: X-Email
          in: header
          required: true
          schema:
            type: string
            format: email
          description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: 職種データが正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    course_id:
                      type: string
                    job_position_id:
                      type: string
                    job_positions:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        description:
                          type: string
                        industry:
                          type: string
        '400':
          description: 必要な認証情報が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: コースが見つからない、または学校に所属していない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: 特定のコースに関連付ける職種を更新
      description: |
        特定のコースに関連付ける職種リストを更新します。
        リクエストボディで渡された`jobPositionIds`のリストに基づいて、既存の関連付けをすべて削除し、新しい関連付けを登録します。
        この操作には、`Authorization`ヘッダーで渡される有効なトークンと`X-Email`ヘッダーで渡されるメールアドレスが必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 学校のID
        - name: courseId
          in: path
          required: true
          schema:
            type: string
          description: 職種を更新するコースのID
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            pattern: '^Bearer [a-zA-Z0-9_-]+$'
          description: APIアクセス用の有効なBearerトークン
        - name: X-Email
          in: header
          required: true
          schema:
            type: string
            format: email
          description: トークンに関連付けられたメールアドレス
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - jobPositionIds
              properties:
                jobPositionIds:
                  type: array
                  items:
                    type: string
                  description: コースに関連付ける職種IDのリスト
      responses:
        '200':
          description: 職種関連付けが正常に更新された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 必要な認証情報が不足している、またはリクエストボディの形式が不正な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: コースが見つからない、または学校に所属していない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/schools/[id]/courses/[courseId]/subjects':
    get:
      summary: 特定のコースの科目一覧を取得
      description: |
        学校IDとコースIDに基づいて、コースの科目一覧を取得します。
        アクセスには、クエリパラメータで渡される有効なトークンとメールアドレスが必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 学校のID
        - name: courseId
          in: path
          required: true
          schema:
            type: string
          description: 科目一覧を取得するコースのID
        - name: token
          in: query
          required: true
          schema:
            type: string
          description: APIアクセス用の有効なトークン
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
          description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: 科目一覧が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    course_id:
                      type: string
                    title:
                      type: string
                    description:
                      type: string
                      nullable: true
                    created_at:
                      type: string
                      format: date-time
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: コースが見つからない、または学校に属していない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: 特定のコースに新しい科目を追加
      description: |
        指定されたコースIDに新しい科目を登録します。
        アクセスには、リクエストボディで渡される有効なトークンとメールアドレスが必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 学校のID
        - name: courseId
          in: path
          required: true
          schema:
            type: string
          description: 科目を追加するコースのID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subject
                - token
                - email
              properties:
                subject:
                  type: object
                  required:
                    - title
                  properties:
                    title:
                      type: string
                      description: 科目のタイトル
                    description:
                      type: string
                      nullable: true
                      description: 科目の説明
                token:
                  type: string
                  description: APIアクセス用の有効なトークン
                email:
                  type: string
                  format: email
                  description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: 科目が正常に追加された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: コースが見つからない、または学校に属していない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: 特定のコースから科目を削除
      description: |
        指定された科目IDに基づいて、コースから科目を削除します。
        アクセスには、クエリパラメータで渡される有効なトークンとメールアドレスが必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 学校のID
        - name: courseId
          in: path
          required: true
          schema:
            type: string
          description: 科目を削除するコースのID
        - name: subjectId
          in: query
          required: true
          schema:
            type: string
          description: 削除する科目のID
        - name: token
          in: query
          required: true
          schema:
            type: string
          description: APIアクセス用の有効なトークン
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
          description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: 科目が正常に削除された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: コースが見つからない、または学校に属していない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: 特定のコースの科目を更新
      description: |
        指定された科目IDに基づいて、コースの科目情報を更新します。
        アクセスには、リクエストボディで渡される有効なトークンとメールアドレスが必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 学校のID
        - name: courseId
          in: path
          required: true
          schema:
            type: string
          description: 科目を更新するコースのID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subject
                - token
                - email
              properties:
                subject:
                  type: object
                  required:
                    - id
                    - title
                  properties:
                    id:
                      type: string
                      description: 更新する科目のID
                    title:
                      type: string
                      description: 新しい科目のタイトル
                    description:
                      type: string
                      nullable: true
                      description: 新しい科目の説明
                token:
                  type: string
                  description: APIアクセス用の有効なトークン
                email:
                  type: string
                  format: email
                  description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: 科目が正常に更新された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: コースが見つからない、または学校に属していない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/schools/[id]/courses/[courseId]':
    put:
      summary: 特定のコース情報を更新
      description: |
        学校IDとコースIDに基づいて、コースの詳細情報を更新します。
        アクセスには、リクエストボディで渡される有効なトークンとメールアドレスが必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 学校のID
        - name: courseId
          in: path
          required: true
          schema:
            type: string
          description: 更新するコースのID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - course
                - token
                - email
              properties:
                course:
                  type: object
                  properties:
                    name:
                      type: string
                      description: コース名
                    category:
                      type: string
                      description: コースのカテゴリー
                    description:
                      type: string
                      description: コースの説明
                    total_weeks:
                      type: number
                      description: 合計期間（週）
                    lecture_weeks:
                      type: number
                      description: 講義期間（週）
                    work_permit_weeks:
                      type: number
                      description: 労働許可期間（週）
                    tuition_and_others:
                      type: string
                      description: 授業料およびその他の費用
                    url:
                      type: string
                      format: uri
                      description: コース詳細のURL
                    admission_requirements:
                      type: string
                      description: 入学要件
                    graduation_requirements:
                      type: string
                      description: 卒業要件
                    job_support:
                      type: string
                      description: 就職支援について
                    notes:
                      type: string
                      description: 備考
                token:
                  type: string
                  description: APIアクセス用の有効なトークン
                email:
                  type: string
                  format: email
                  description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: コース情報が正常に更新された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: コースが見つからない、または学校に属していない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: 特定のコースを削除
      description: |
        学校IDとコースIDに基づいて、コースとそれに紐づく全ての関連データを削除します。
        アクセスには、リクエストボディで渡される有効なトークンとメールアドレスが必要です。
        トークンは使用後、履歴が更新されます。
        **注意**: この操作は`favorite_courses`、`school_photos`、`course_subjects`など、関連する複数のテーブルのデータを削除します。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 学校のID
        - name: courseId
          in: path
          required: true
          schema:
            type: string
          description: 削除するコースのID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - email
              properties:
                token:
                  type: string
                  description: APIアクセス用の有効なトークン
                email:
                  type: string
                  format: email
                  description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: コースが正常に削除された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: コースが見つからない、または学校に属していない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/schools/[id]/courses':
    post:
      summary: 特定の学校に新しいコースを登録
      description: |
        学校IDに基づいて、新しいコースの情報をデータベースに登録します。
        アクセスには、リクエストボディで渡される有効なトークンとメールアドレスが必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: コースを登録する学校のID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - course
                - token
                - email
              properties:
                course:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: コース名
                    category:
                      type: string
                      nullable: true
                      description: コースのカテゴリー
                    description:
                      type: string
                      nullable: true
                      description: コースの説明
                    total_weeks:
                      type: number
                      nullable: true
                      description: 合計期間（週）
                    lecture_weeks:
                      type: number
                      nullable: true
                      description: 講義期間（週）
                    work_permit_weeks:
                      type: number
                      nullable: true
                      description: 労働許可期間（週）
                    tuition_and_others:
                      type: string
                      nullable: true
                      description: 授業料およびその他の費用
                    url:
                      type: string
                      format: uri
                      nullable: true
                      description: コース詳細のURL
                    admission_requirements:
                      type: string
                      nullable: true
                      description: 入学要件
                    graduation_requirements:
                      type: string
                      nullable: true
                      description: 卒業要件
                    job_support:
                      type: string
                      nullable: true
                      description: 就職支援について
                    notes:
                      type: string
                      nullable: true
                      description: 備考
                token:
                  type: string
                  description: APIアクセス用の有効なトークン
                email:
                  type: string
                  format: email
                  description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: 新規コースが正常に作成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  course:
                    type: object
                    properties:
                      id:
                        type: string
                      school_id:
                        type: string
                      name:
                        type: string
                      created_at:
                        type: string
                        format: date-time
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/schools/[id]/invite':
    post:
      summary: 学校の担当者用に一時的なアクセストークンを生成
      description: |
        このAPIは管理者ユーザーのみが利用可能です。
        指定された学校IDとメールアドレスに対して、30日間有効な一時的なアクセストークンを生成します。
        このトークンを使用することで、学校の担当者は認証なしで特定の編集ページにアクセスできます。
        トークンはデータベースに保存され、有効期限付きのアクセスURLが生成されて返されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: トークンを生成する学校のID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: トークンを付与する学校担当者のメールアドレス
                  example: staff@example.com
      responses:
        '200':
          description: アクセストークンが正常に生成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  accessUrl:
                    type: string
                    format: uri
                    description: 学校の編集ページへのアクセスURL
                  school:
                    type: string
                    description: 学校名
                  expiresAt:
                    type: string
                    format: date-time
                    description: トークンの有効期限
        '400':
          description: 無効なリクエストボディ、またはメールアドレスが不正な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 認証されていないユーザーからのリクエストの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: ユーザーに管理者権限がない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 指定された学校が見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/api/schools/[id]/photos':
    post:
      summary: 学校またはコースの写真をアップロード
      description: |
        指定された学校IDに写真をアップロードし、データベースに情報を保存します。
        オプションとして`courseId`を指定することで、特定のコースに写真を紐づけることができます。
        アクセスには、リクエストボディで渡される有効なトークンとメールアドレスが必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 写真をアップロードする学校のID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - imageUrl
                - token
                - email
              properties:
                imageUrl:
                  type: string
                  format: uri
                  description: アップロードされた写真のURL
                description:
                  type: string
                  nullable: true
                  description: 写真の説明
                token:
                  type: string
                  description: APIアクセス用の有効なトークン
                email:
                  type: string
                  format: email
                  description: トークンに関連付けられたメールアドレス
                courseId:
                  type: string
                  nullable: true
                  description: 写真を紐づけるコースのID
      responses:
        '200':
          description: 写真が正常に登録された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  photo:
                    type: object
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: 学校またはコースの写真を取得
      description: |
        指定された学校IDに紐づく写真の一覧を取得します。
        `courseId`クエリパラメータを指定することで、特定のコースの写真のみにフィルタリングできます。
        アクセスには、クエリパラメータで渡される有効なトークンとメールアドレスが必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 写真を取得する学校のID
        - name: courseId
          in: query
          required: false
          schema:
            type: string
          description: 写真をフィルタリングするコースのID
        - name: token
          in: query
          required: true
          schema:
            type: string
          description: APIアクセス用の有効なトークン
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
          description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: 写真一覧が正常に取得された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  photos:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        school_id:
                          type: string
                        course_id:
                          type: string
                          nullable: true
                        url:
                          type: string
                          format: uri
                        description:
                          type: string
                          nullable: true
                        created_at:
                          type: string
                          format: date-time
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: 学校またはコースの写真を削除
      description: |
        指定された写真IDに基づいて、写真を削除します。
        アクセスには、クエリパラメータで渡される有効なトークンとメールアドレスが必要です。
        トークンは使用後、履歴が更新されます。
      tags:
        - Schools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 写真が属する学校のID
        - name: photoId
          in: query
          required: true
          schema:
            type: string
          description: 削除する写真のID
        - name: token
          in: query
          required: true
          schema:
            type: string
          description: APIアクセス用の有効なトークン
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
          description: トークンに関連付けられたメールアドレス
      responses:
        '200':
          description: 写真が正常に削除された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 無効または期限切れのトークンの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/search:
    get:
      summary: 統合検索エンドポイント
      description: |
        クエリパラメータ`q`を使用して、ビザ情報とインタビュー記事を統合して検索します。
        検索結果は、SupabaseとMicroCMSから取得されます。
        このエンドポイントは、ユーザーが入力したキーワードに関連する多角的な情報を取得するために使用されます。
      tags:
        - Search
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
          description: 検索するキーワード
          example: ワーホリ ビザ
      responses:
        '200':
          description: 検索が成功し、結果が返された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  visa:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        content:
                          type: string
                        visa_type:
                          type: string
                  interviews:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        description:
                          type: string
                        body:
                          type: string
                        photo:
                          type: object
                          properties:
                            url:
                              type: string
                              format: uri
        '400':
          description: 検索クエリが指定されていない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/slack/new-message:
    post:
      summary: Slackにチャットメッセージの通知を送信
      description: |
        このエンドポイントは、新しいチャットメッセージに関する通知をSlackに送信するために使用されます。
        メッセージの内容、送信者、受信者、および関連するチャットのリンクを含むリッチなメッセージブロックを生成し、指定されたSlackチャンネルに投稿します。
      tags:
        - Slack
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - messageContent
              properties:
                userId:
                  type: string
                  description: メッセージを送信したユーザーのID
                messageContent:
                  type: string
                  description: 通知するチャットメッセージの内容
                sender:
                  type: string
                  nullable: true
                  description: メッセージの送信者名（オプション）
                receiver:
                  type: string
                  nullable: true
                  description: メッセージの受信者名（オプション）
                messageId:
                  type: string
                  nullable: true
                  description: メッセージのID（オプション）
                channelId:
                  type: string
                  nullable: true
                  description: メッセージが属するチャットチャンネルのID（オプション）
      responses:
        '200':
          description: 通知が正常に送信された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        '500':
          description: サーバーエラーまたはSlackトークンが設定されていない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
  /api/slack/new-visa-plan:
    post:
      summary: Slackにビザプランの通知を送信
      description: |
        新しいビザプランが作成されたことをSlackに通知します。
        このエンドポイントは、プランを作成したユーザー情報とビザプランIDをリクエストボディから受け取ります。
        指定されたSlackチャンネルに、ユーザー名、ビザプランID、および詳細を確認するためのダッシュボードへのリンクを含むメッセージを送信します。
      tags:
        - Slack
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - visaPlanId
              properties:
                userId:
                  type: string
                  description: ビザプランを作成したユーザーのID
                visaPlanId:
                  type: string
                  description: 新しく作成されたビザプランのID
                userName:
                  type: string
                  nullable: true
                  description: ビザプランを作成したユーザーの名前（オプション）
      responses:
        '200':
          description: 通知が正常に送信された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        '500':
          description: サーバーエラーまたはSlackトークンが設定されていない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
  /api/slack/notify-chat-message:
    post:
      summary: 新規チャットメッセージのSlack通知をトリガー
      description: |
        このエンドポイントは、新しいチャットメッセージが作成された際に、Slackへの通知を非同期でトリガーします。
        リクエストボディからメッセージのID、チャンネルID、ユーザーID、メッセージ本文を受け取り、事前に定義されたSlack通知関数を呼び出します。
        このAPIは、チャット機能のメインフローから分離されており、通知処理がチャットの応答性に影響を与えないように設計されています。
        内部では、送信者の権限やセッション認証のチェックも行われますが、エラーが発生しても通知の試行は続行されます。
      tags:
        - Slack
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - messageId
                - channelId
                - userId
                - text
              properties:
                messageId:
                  type: string
                  description: 新規メッセージのID
                channelId:
                  type: string
                  description: メッセージが投稿されたチャットチャンネルのID
                userId:
                  type: string
                  description: メッセージを送信したユーザーのID
                text:
                  type: string
                  description: メッセージの本文
                userName:
                  type: string
                  nullable: true
                  description: メッセージを送信したユーザーの名前（オプション）
      responses:
        '200':
          description: 通知が正常にトリガーされた場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: object
        '400':
          description: 必須パラメータが不足している、またはリクエストボディの解析に失敗した場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/slack/notify-course-application:
    post:
      summary: 新しいコース申請のSlack通知を送信
      description: |
        ユーザーが新しいコースに申請した際に、Slackに通知を送信するためのエンドポイントです。
        このAPIは、認証されたユーザーセッションを必要とします。
        リクエストボディから`applicationId`と`courseName`を受け取り、ユーザー情報をデータベースから取得して、Slack通知をトリガーします。
        通知には、申請者の名前、コース名、および管理者向けの申請詳細へのリンクが含まれます。
      tags:
        - Slack
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - applicationId
                - courseName
              properties:
                applicationId:
                  type: string
                  description: 新しく作成されたコース申請のID
                courseName:
                  type: string
                  description: 申請されたコースの名前
      responses:
        '200':
          description: 通知が正常に送信された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 必須パラメータが不足している、またはリクエストボディが不正な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 認証されていないユーザーからのリクエストの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/slack/notify-onboarding:
    post:
      summary: 新しいコース申請のSlack通知を送信
      description: |
        ユーザーが新しいコースに申請した際に、Slackに通知を送信するためのエンドポイントです。
        このAPIは、認証されたユーザーセッションを必要とします。
        リクエストボディから`applicationId`と`courseName`を受け取り、ユーザー情報をデータベースから取得して、Slack通知をトリガーします。
        通知には、申請者の名前、コース名、および管理者向けの申請詳細へのリンクが含まれます。
      tags:
        - Slack
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - applicationId
                - courseName
              properties:
                applicationId:
                  type: string
                  description: 新しく作成されたコース申請のID
                courseName:
                  type: string
                  description: 申請されたコースの名前
      responses:
        '200':
          description: 通知が正常に送信された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 必須パラメータが不足している、またはリクエストボディが不正な場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 認証されていないユーザーからのリクエストの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/slack/notify-visa-message:
    post:
      summary: 新しいビザプランメッセージのSlack通知をトリガー
      description: |
        このエンドポイントは、ユーザーがビザプランナー内で新しいメッセージを投稿した際に、Slackへの通知を非同期でトリガーします。
        ユーザーは認証されている必要があり、リクエスト内の`userId`は認証されたユーザーのIDと一致しなければなりません。
        リクエストボディからメッセージの詳細を受け取り、データベースからユーザー情報を取得後、Slack通知を送信します。
        このプロセスはビザプランナーの応答性を保つために非同期で実行されます。
      tags:
        - Slack
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - messageId
                - planId
                - userId
                - title
                - content
              properties:
                messageId:
                  type: string
                  description: 新規メッセージのID
                planId:
                  type: string
                  description: メッセージが投稿されたビザプランのID
                userId:
                  type: string
                  description: メッセージを送信したユーザーのID
                title:
                  type: string
                  description: メッセージのタイトル
                content:
                  type: string
                  description: メッセージの本文
      responses:
        '200':
          description: 通知が正常にトリガーされた場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 認証されていないユーザーからのリクエストの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: 認証されたユーザーIDがリクエストと一致しない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/slack:
    get:
      summary: Slack API関連情報取得エンドポイント
      description: |
        クエリパラメータの`action`に応じて、Slackコミュニティに関する様々な情報を取得します。
        - `action`が指定されない場合、すべてのコミュニティカテゴリ情報を返します。
        - `action=new-members-count`と`category`を指定すると、指定カテゴリの新規メンバー数を返します。
        - `action=member-count`と`category`を指定すると、指定カテゴリの総メンバー数を返します。
        - `action=general-member-count`を指定すると、generalチャンネルの総メンバー数を返します。
        メンバー数情報はキャッシュされ、再検証間隔は1時間です。
      tags:
        - Slack
      parameters:
        - name: action
          in: query
          required: false
          schema:
            type: string
            enum:
              - new-members-count
              - member-count
              - general-member-count
          description: 実行するアクション。指定がない場合は全てのカテゴリ情報を返します。
        - name: category
          in: query
          required: false
          schema:
            type: string
          description: '`action`が`new-members-count`または`member-count`の場合に必須となるカテゴリ名。'
      responses:
        '200':
          description: 正常な応答。応答スキーマは`action`パラメータによって異なります。
          content:
            application/json:
              schema:
                oneOf:
                  - title: All Categories Response
                    type: object
                    properties:
                      success:
                        type: boolean
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            members:
                              type: number
                            newMembers:
                              type: number
                  - title: New Members Count Response
                    type: object
                    properties:
                      category:
                        type: string
                      newMembersCount:
                        type: number
                      cached:
                        type: boolean
                  - title: Member Count Response
                    type: object
                    properties:
                      category:
                        type: string
                      memberCount:
                        type: number
                      cached:
                        type: boolean
                  - title: General Member Count Response
                    type: object
                    properties:
                      success:
                        type: boolean
                      memberCount:
                        type: number
                      source:
                        type: string
                        enum:
                          - slack_api
                          - default
                          - error
                      error:
                        type: string
                        nullable: true
        '400':
          description: 必須のクエリパラメータが不足している、または無効な値が指定された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/stripe/cancel-subscription:
    post:
      summary: ユーザーのStripeサブスクリプションをキャンセル
      description: |
        このエンドポイントは、指定された`userId`に紐づくStripeのサブスクリプションをキャンセルします。
        ユーザーのプロファイルからサブスクリプションIDを取得し、Stripe APIを介してキャンセル処理を実行します。
        キャンセル後、データベースのユーザープロファイル情報を更新して、メンバーシップステータスを非アクティブにします。
        すでにキャンセル済みの場合やStripe側でサブスクリプションが見つからない場合でも、データベースの整合性を保つようになっています。
      tags:
        - Stripe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  description: サブスクリプションをキャンセルするユーザーのID
                  example: abcde12345-fghij67890
      responses:
        '200':
          description: サブスクリプションが正常にキャンセルされた場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: 必須パラメータが不足している、またはアクティブなサブスクリプションが見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: 指定された`userId`のユーザープロファイルが見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: サーバーエラー、Stripe APIの呼び出し失敗、またはデータベースの更新失敗の場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
                    nullable: true
  /api/stripe/create-customer-portal-session:
    post:
      summary: Stripeカスタマーポータルセッションを作成
      description: |
        このエンドポイントは、Stripeの顧客ポータルへのリダイレクトURLを生成します。
        リクエストボディで`customerId`を受け取り、Stripe APIを使用して新しいセッションを作成します。
        生成されたURLは、顧客が請求情報、サブスクリプション、支払い履歴などを管理するためのポータルにアクセスするために使用されます。
        ユーザーは、このURLにリダイレクトされることで、Stripeで直接アカウントを管理できます。
      tags:
        - Stripe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerId
              properties:
                customerId:
                  type: string
                  description: Stripeの顧客ID
                  example: cus_L3tW9z4m2Jp7z5
      responses:
        '200':
          description: セッションが正常に作成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
                    description: StripeカスタマーポータルへのリダイレクトURL
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/stripe/create-portal-session:
    post:
      summary: 認証されたユーザーのStripeカスタマーポータルセッションを作成
      description: |
        このエンドポイントは、現在認証されているユーザーのStripeカスタマーポータルへのリダイレクトURLを生成します。
        ユーザーのセッションとプロフィールからStripe顧客IDを取得し、Stripe APIを介してセッションを作成します。
        ユーザーは、このURLを使用して、請求情報やサブスクリプションを管理できます。
        Stripeの顧客ポータルが正しく設定されていない場合は、詳細なエラーメッセージを返します。
      tags:
        - Stripe
      security:
        - cookieAuth: []
      responses:
        '200':
          description: セッションが正常に作成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
                    description: StripeカスタマーポータルへのリダイレクトURL
        '400':
          description: Stripe顧客ポータルが設定されていない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                  details:
                    type: string
        '401':
          description: 認証されていないユーザーからのリクエストの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: ユーザーにStripe顧客IDが見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/stripe/create-subscription:
    post:
      summary: メンバーシップサブスクリプションのためのStripeチェックアウトセッションを作成
      description: |
        このエンドポイントは、新しいメンバーシップサブスクリプションの支払いのために、Stripeのチェックアウトセッションを作成します。
        リクエストボディで`userId`を受け取り、ユーザーのメールアドレスがすでにメンバーでないことを確認します。
        確認後、Stripe APIを介して決済セッションを生成し、成功時とキャンセル時のリダイレクトURLを設定します。
        セッションには、ユーザーIDなどのメタデータが含まれており、Webhookで後続処理を可能にします。
        生成されたセッションIDとURLがフロントエンドに返されます。
      tags:
        - Stripe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  description: サブスクリプションを購入するユーザーのID
      responses:
        '200':
          description: チェックアウトセッションが正常に作成された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                    description: 生成されたStripeチェックアウトセッションのID
                  url:
                    type: string
                    format: uri
                    description: チェックアウトページへのリダイレクトURL
        '400':
          description: ユーザーがすでにメンバーである場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/stripe/update-missing-stripe-info:
    post:
      summary: メンバーシップに紐づくStripe顧客・サブスクリプション情報を更新
      description: |
        このエンドポイントは、ユーザーのメンバーシップ情報に基づいて、関連するStripeの顧客IDとサブスクリプションIDをデータベースに同期・更新します。
        ユーザーが既にメンバーであり、Stripe情報がプロファイルに未登録の場合にこの処理を実行します。
        具体的には、ユーザーのメールアドレスを使ってStripeから顧客情報を検索し、アクティブなサブスクリプションIDを取得して、データベースのユーザープロファイルを更新します。
        このAPIは、何らかの理由でStripe情報がデータベースと同期されていない場合に、手動で同期を行うために使用できます。
      tags:
        - Stripe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  description: Stripe情報を更新するユーザーのID
                  example: abcde12345-fghij67890
      responses:
        '200':
          description: |
            Stripe情報が正常に更新された、または更新の必要がなかった場合の応答。
            ユーザーが既にメンバーでない場合、またはStripe情報が既に存在する場合は、このステータスコードが返されます。
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - properties:
                      success:
                        type: boolean
                      message:
                        type: string
                      data:
                        type: object
                        properties:
                          customerId:
                            type: string
                          subscriptionId:
                            type: string
                  - properties:
                      message:
                        type: string
        '404':
          description: |
            指定された`userId`のユーザープロファイルが見つからない場合、またはStripeにメールアドレス/アクティブなサブスクリプションが見つからない場合の応答。
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/stripe/webhook:
    post:
      summary: Stripeウェブフックイベントを処理
      description: |
        このエンドポイントはStripeからのウェブフックイベントを受信し、処理します。
        リクエストはStripeのシグネチャで検証され、認証後、イベントのタイプに応じて以下の処理を実行します。
        - `checkout.session.completed`: 決済セッションが完了した際に、`userId`を含むメタデータからユーザーを特定し、Supabaseの`profiles`テーブルを更新してメンバーシップを有効にします。
        - `customer.subscription.deleted`: サブスクリプションがキャンセルされた際に、関連するユーザーを特定し、`is_member`フラグを`false`に設定してメンバーシップを無効化します。
        - `customer.subscription.updated`: サブスクリプションが更新された際に、キャンセル予定の状態や、期間終了日の変更などを`profiles`テーブルに反映します。
        Supabaseへのアクセスにはサービスロールキーを使用し、サーバーサイドから安全にデータベースを操作します。
      tags:
        - Stripe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Stripeウェブフックイベントのペイロード
      responses:
        '200':
          description: イベントが正常に処理された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 不正なシグネチャ、または必要な情報（`userId`、`subscriptionId`、`customerId`など）が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
                    nullable: true
        '404':
          description: サブスクリプションIDまたは顧客IDからユーザーが見つからない場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/visa-plan-reviews/update:
    post:
      summary: ビザプランレビューの更新
      description: |
        このエンドポイントは、管理者によるビザプランのレビューを更新するために使用されます。
        認証された管理者のみがこのAPIにアクセスできます。
        リクエストボディで提供されたレビューID、管理者ID、コメント、ステータスなどの情報を使用して、`visa_plan_reviews`テーブルの該当レコードを更新します。
        ステータスが「completed」に更新された場合、関連する`visa_plans`テーブルのステータスも「reviewed」に更新されます。
      tags:
        - Visa Plan Review
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - review_id
                - admin_id_input
                - admin_comment_input
                - status_input
              properties:
                review_id:
                  type: string
                  description: 更新するビザプランレビューのID
                admin_id_input:
                  type: string
                  description: レビューを更新する管理者のID
                admin_comment_input:
                  type: string
                  description: 管理者によるレビューコメント
                status_input:
                  type: string
                  enum:
                    - pending
                    - completed
                  description: 更新後のレビューのステータス
                completed_at_input:
                  type: string
                  format: date-time
                  nullable: true
                  description: レビューが完了した日時（`status_input`が`completed`の場合に設定）
      responses:
        '200':
          description: ビザプランレビューが正常に更新された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: 必須パラメータが不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: 認証されていないユーザーからのリクエストの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: 管理者権限がないユーザーからのリクエストの場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/webhook:
    post:
      summary: Stripeウェブフックイベントを処理
      description: |
        このエンドポイントはStripeからのウェブフックイベントを受信し、データベースのユーザー情報を更新します。リクエストはStripeのシグネチャで検証され、認証後、イベントのタイプに応じてSupabaseの`profiles`テーブルを更新します。
        - `checkout.session.completed`: 決済セッションが完了した際に、ユーザーを特定し、`is_member`フラグを`true`に設定し、Stripeの顧客IDとサブスクリプションIDを保存します。
        - `customer.subscription.deleted`: サブスクリプションがキャンセルされた際に、関連するユーザーを特定し、`is_member`フラグを`false`に設定します。
        - `customer.subscription.updated`: サブスクリプションが再開された場合、メンバーシップを再度有効化します。キャンセル予定の更新はここでは特に処理しません。
      tags:
        - Webhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Stripeウェブフックイベントのペイロード
      responses:
        '200':
          description: イベントが正常に処理された場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: 不正なシグネチャ、または必要な情報（`userId`、`subscriptionId`など）が不足している場合の応答
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
                    nullable: true
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  responses:
    BadRequest:
      description: リクエストの形式が不正です。必須パラメータの不足や値の形式が間違っています。
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: 質問が指定されていません
    UnauthorizedError:
      description: 認証エラー。有効な認証情報が提供されていません。
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: 認証情報が不正です
    NotFound:
      description: 指定したリソースが見つかりません。
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: リソースが見つかりません
    InternalServerError:
      description: サーバーエラー。予期せぬ問題が発生しました。
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: 予期せぬエラーが発生しました
